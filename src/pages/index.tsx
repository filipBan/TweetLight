import type {
  GetServerSideProps,
  GetServerSidePropsContext,
  NextPage,
} from 'next'
import Head from 'next/head'
import { trpc } from '@/utils/trpc'
import { signOut, useSession } from 'next-auth/react'
import Image from 'next/image'

import { getTweetLightSession } from '@/utils/getTweetLightSession'
import { NewTweet } from '@/components/NewTweet'

const Home: NextPage = () => {
  // const hello = trpc.useQuery(['auth.getSession'])

  // const { data: session } = useSession()

  // console.log(session)

  // if (!session || !session.user) {
  //   return null
  // }

  return (
    <>
      <Head>
        <title>TweetLight</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <nav className="border flex justify-center">
          <div className="p-5 flex justify-between items-center w-full md:w-3/5 border">
            <div>Logo</div>
            <div>User</div>
          </div>
        </nav>
        <section className="flex justify-center">
          <div className="p-5 border w-full md:w-3/5">
            <NewTweet />
            <div>Here go tweets</div>
          </div>
        </section>
        {/* Signed in as {session?.user?.email} <br />
        <button onClick={() => signOut()}>Sign out</button>
        <img
          src={session.user.image!}
          alt="Profile pic"
          width={100}
          height={100}
        /> */}
      </main>
    </>
  )
}

// export const getServerSideProps: GetServerSideProps = async (
//   ctx: GetServerSidePropsContext
// ) => {
//   const session = await getTweetLightSession(ctx)

//   if (!session) {
//     return {
//       redirect: { destination: '/login', permanent: false },
//     }
//   }

//   return {
//     props: {
//       session,
//     },
//   }
// }

export default Home
